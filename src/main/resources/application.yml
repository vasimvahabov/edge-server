spring:
  application:
    name: edge-server
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    gateway:
      server:
        webflux:
          httpclient:
            connect-timeout: 2000
            response-timeout: 5s
            pool:
              type: elastic
              max-idle-time: 15s
              max-life-time: 60s
          routes:
            - id: flight-service-route
              uri: ${FLIGHT_SERVICE_URL:http://localhost:8899}
              predicates:
                - Path=/api/v1/flights/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: flightServiceCircuitBreaker
                    fallbackUri: forward:/flight-service-fallback
            - id: flight-booking-service-route
              uri: ${FLIGHT_BOOKING_SERVICE_URL:http://localhost:7788}
              predicates:
                - Path=/api/v1/flight-bookings/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: flightBookingServiceCircuitBreaker
          default-filters:
            - name: Retry
              args:
                retries: 3
                methods: GET
                series: SERVER_ERROR
                exceptions: java.io.IOException, java.util.concurrent.TimeoutException
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms
                  factor: 2
                  basedOnPreviousValue: false

server:
  netty:
    idle-timeout: 15s
    connection-timeout: 2s
  shutdown: graceful
  port: 6677

logging:
  level:
    io.github.resilience4j: DEBUG

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 20
        permitted-number-of-calls-in-half-open-state: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 15000
  timelimiter:
    configs:
      default:
        timeout-duration: 5s
